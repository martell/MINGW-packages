# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Martell Malone <martellmalone@gmail.com>
# Contributor: Zion Nimchuk <zionnimchuk@gmail.com>
# Contributor: Mateusz Miku≈Ça <mati865@gmail.com


_realname=rust
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=1.18.0
pkgrel=1
pkgdesc="Systems programming language focused on safety, speed and concurrency (mingw-w64)"
arch=('any')
url="https://www.rust-lang.org/"
license=('MIT' 'Apache')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs")
makedepends=("bison"
             "flex"
             "git"
             "diffutils"
             "${MINGW_PACKAGE_PREFIX}-cmake>=3.4.3"
             "${MINGW_PACKAGE_PREFIX}-curl"
             "${MINGW_PACKAGE_PREFIX}-jemalloc"
             "${MINGW_PACKAGE_PREFIX}-libffi"
             "${MINGW_PACKAGE_PREFIX}-libssh2"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-python2"
             "${MINGW_PACKAGE_PREFIX}-rust")
options=('!makeflags' 'staticlibs')
#install=rust.install
source=("https://static.rust-lang.org/dist/${_realname}c-${pkgver}-src.tar.gz"
        "git+https://github.com/rust-lang/cargo.git#tag=0.19.0"
        "force-curl-rust.patch"
        "fix-jemalloc.patch"
        "0001-bootstrap-use-stable-release-for-stage0.patch")
sha256sums=('d2dc36e99b9e2269488b2bcddde43c234e6bde03edf70cba82a027ff49c36111'
            'SKIP'
            'b2a16e472e8d162affb3f56410a1dc971ae918ade099a2ef33dcaee10e449c68'
            '7fabd72d1611ef1e46191c245d356d88909ea19062ea6999e1e1a049ebe8784d'
            'd8d9b70c453403f2985ced8f6baf8dec0518741b7398fd27196e24e189a0b3ef'
            '3c56719f4fec822277d37f0c56aef230e4b8033e005d538037da4632cdc064ba')

prepare() {
  cd ${srcdir}/${_realname}c-${pkgver}-src
  patch -p1 -i "${srcdir}/force-curl-rust.patch"
  patch -p1 -i "${srcdir}/fix-jemalloc.patch"
  patch -p1 -i "${srcdir}/0001-bootstrap-use-stable-release-for-stage0.patch"

  cd ${srcdir}/cargo

  # download cargo installer
  git submodule update --init --recursive

  sed 's^share/doc^share/licenses^g' -i Makefile.in
}

build() {
  [[ -d "${srcdir}/build-${MINGW_CHOST}" ]] && rm -rf "${srcdir}/build-${MINGW_CHOST}"
  mkdir -p "${srcdir}/build-${MINGW_CHOST}" && cd "${srcdir}/build-${MINGW_CHOST}"

  #We have to do the following because rust doesn't count x86_64-w64-mingw32 as a target triple
  OSTYPE="$CARCH-pc-windows-gnu"

  ../${_realname}c-${pkgver}-src/configure \
    --prefix=${MINGW_PREFIX} \
    --build=$OSTYPE \
    --host=$OSTYPE \
    --target=$OSTYPE \
    --release-channel=stable \
    --enable-ninja \
    --disable-codegen-tests \
    --jemalloc-root=${MINGW_PREFIX}/lib \
    --local-rust-root=$(cygpath -m ${MINGW_PREFIX})
    # LLVM 4.0 is unsupported
    #--llvm-root=${MINGW_PREFIX} \

  python2 ../${_realname}c-${pkgver}-src/x.py build
}

check() {
  cd "${srcdir}/build-${MINGW_CHOST}"
  # it might fail on Windows
  python2 ../${_realname}c-${pkgver}-src/x.py test || true
}

package() {
  cd "${srcdir}/build-${MINGW_CHOST}"

  make DESTDIR="$pkgdir" install

  rm -f ${pkgdir}${MINGW_PREFIX}/bin/libgcc*.dll
  rm -f ${pkgdir}${MINGW_PREFIX}/bin/libstd*.dll
  rm -f ${pkgdir}${MINGW_PREFIX}/bin/libwinpthread*.dll

  install -Dm644 ${srcdir}/${_realname}c-${pkgver}-src/LICENSE-APACHE "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE-APACHE"
  install -Dm644 ${srcdir}/${_realname}c-${pkgver}-src/LICENSE-MIT "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE-MIT"

  # build cargo
  # We need to build cargo here because it requires rustc, so we need to wait until rustc is packaged.
  [[ -d "${srcdir}/build-cargo-${MINGW_CHOST}" ]] && rm -rf "${srcdir}/build-cargo-${MINGW_CHOST}"
  mkdir -p "${srcdir}/build-cargo-${MINGW_CHOST}" && cd "${srcdir}/build-cargo-${MINGW_CHOST}"

  OSTYPE="$CARCH-pc-windows-gnu"

  ../cargo/configure --local-rust-root=${pkgdir}${MINGW_PREFIX} --prefix=${MINGW_PREFIX} --build=$OSTYPE --host=$OSTYPE --target=$OSTYPE --enable-optimize
  make

  # Install cargo
  cd "${srcdir}/build-cargo-${MINGW_CHOST}"

  make DESTDIR="${pkgdir}" install

  install -d "$pkgdir${MINGW_PREFIX}/share/bash-completion/completions"
  mv "${pkgdir}${MINGW_PREFIX}/etc/bash_completion.d/cargo" \
     "${pkgdir}${MINGW_PREFIX}/share/bash-completion/completions/cargo"
}
